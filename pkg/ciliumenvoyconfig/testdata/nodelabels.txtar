# Show what tables we're working against.
db tables
node show
node update node_nolabels.yaml

# Start with clean state.
db cmp services services_empty.table
db cmp ciliumenvoyconfigs cec_empty.table

# Wait for reflection to start.
lb initialized

# Set up the services and endpoints
k8s add service.yaml endpointslice.yaml
db cmp services services.table

# Add the CiliumEnvoyConfig and wait for it to be ingested.
k8s add cec.yaml
db cmp ciliumenvoyconfigs cec_notselected.table

# Nothing updated towards envoy.
cmp_envoy_update 0 <nil>
cmp_envoy_upsert 0 <nil>

# Update the node labels so that CEC gets selected.
node update node_withlabels.yaml
db cmp ciliumenvoyconfigs cec_selected.table

# Check that right updates towards Envoy happened.
cmp_envoy_update 1 L:test/envoy-lb-listener/envoy-lb-listener/1000 EP:
cmp_envoy_upsert 1 L: EP:test/echo:*=10.244.1.1:8080,test/echo=10.244.1.1:8080

# Check BPF map contents
lb reconciled
lb writemaps maps.out
cmp maps.out maps.expected

# Check that both services are now redirected to proxy.
db cmp services services_redirected.table

# Module health should be happy
db cmp -grep=cec-test health health.table

# There should be no reconciliation errors
metrics -prefix=cilium_reconciler_errors metrics.out
cmp metrics.out metrics.expected

# Test the processing other way around, e.g. CEC exists before
# the service.
k8s delete service.yaml
db cmp services services_empty.table
k8s add service.yaml
db cmp services services_redirected.table

# Cleanup
k8s delete cec.yaml
db cmp services services.table
db cmp ciliumenvoyconfigs cec_empty.table

k8s delete service.yaml endpointslice.yaml
db cmp services services_empty.table

# ---------------------------------------------

-- services_empty.table --
Name ProxyRedirect

-- services.table --
Name       ProxyRedirect
test/echo  

-- services_redirected.table --
Name       ProxyRedirect
test/echo  1000

-- metrics.expected --
cilium_reconciler_errors_current{module_id=cec-test.reconciler}: 0
cilium_reconciler_errors_current{module_id=test.reconciler}: 0
-- health.table --
Module               Component                                   Level  Error
cec-test.controller  job-control-loop                            OK          
cec-test.reconciler  job-reconcile                               OK          
cec-test.reconciler  job-refresh                                 OK          
cec-test.reflector   job-k8s-reflector-ciliumenvoyconfigs-ccec   OK          
cec-test.reflector   job-k8s-reflector-ciliumenvoyconfigs-cec    OK

-- cec_empty.table --
Name Services

-- cec_notselected.table --
Name                    Selected  Services
test/envoy-lb-listener  false     test/echo

-- cec_selected.table --
Name                    Selected  Services
test/envoy-lb-listener  true      test/echo


-- cec.yaml --
apiVersion: cilium.io/v2
kind: CiliumEnvoyConfig
metadata:
  name: envoy-lb-listener
  namespace: test
spec:
  services:
    - name: echo
      namespace: test
      listener: envoy-lb-listener
  resources:
    - "@type": type.googleapis.com/envoy.config.listener.v3.Listener
      name: envoy-lb-listener
  nodeSelector:
    matchLabels:
      foo: bar
    

-- service.yaml --
apiVersion: v1
kind: Service
metadata:
  name: echo
  namespace: test
  uid: a49fe99c-3564-4754-acc4-780f2331a49b
spec:
  clusterIP: 10.96.50.104
  clusterIPs:
  - 10.96.50.104
  ports:
  - name: http
    nodePort: 30781
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    name: echo
  type: NodePort
status:
  loadBalancer: {}

-- service2.yaml --
apiVersion: v1
kind: Service
metadata:
  name: echo2
  namespace: test
  uid: b49fe99c-3564-4754-acc4-780f2331a49b
spec:
  clusterIP: 10.96.50.105
  clusterIPs:
  - 10.96.50.105
  ports:
  - name: http
    nodePort: 30782
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    name: echo
  type: NodePort
status:
  loadBalancer: {}

-- endpointslice.yaml --
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  labels:
    kubernetes.io/service-name: echo
  name: echo-eps1
  namespace: test
  uid: d1f517f6-ab88-4c76-9bd0-4906a17cdd75
addressType: IPv4
endpoints:
- addresses:
  - 10.244.1.1
  conditions:
    ready: true
    serving: true
    terminating: false
  nodeName: nodeport-worker
ports:
- name: tcp
  port: 8080
  protocol: TCP

-- endpointslice2.yaml --
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  labels:
    kubernetes.io/service-name: echo2
  name: echo2-eps1
  namespace: test
  uid: d1f517f6-ab88-4c76-9bd0-4906a17cdd76
addressType: IPv4
endpoints:
- addresses:
  - 10.244.1.2
  conditions:
    ready: true
    serving: true
    terminating: false
  nodeName: nodeport-worker
ports:
- name: tcp
  port: 8081
  protocol: TCP


-- node_nolabels.yaml --
node:
  name: "test"
  labels:

-- node_withlabels.yaml --
node:
  name: "test"
  labels:
    foo: bar

-- maps.expected --
REV: ID=1 ADDR=10.96.50.104:80
SVC: ID=1 ADDR=10.96.50.104:80 SLOT=0 BEID=59395 COUNT=0 QCOUNT=0 FLAGS=ClusterIP+non-routable+l7-load-balancer
